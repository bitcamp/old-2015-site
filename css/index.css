/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
@font-face {
  font-family: 'Aleo';
  src: url("../fonts/Aleo/Aleo-Regular-webfont.eot");
  src: url("../fonts/Aleo/Aleo-Regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/Aleo/Aleo-Regular-webfont.woff") format("woff"), url("../fonts/Aleo/Aleo-Regular-webfont.ttf") format("truetype"), url("../fonts/Aleo/Aleo-Regular-webfont.svg#aleoregular") format("svg");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Aleo';
  src: url("Aleo-Italic-webfont.eot");
  src: url("Aleo-Italic-webfont.eot?#iefix") format("embedded-opentype"), url("Aleo-Italic-webfont.woff") format("woff"), url("Aleo-Italic-webfont.ttf") format("truetype"), url("Aleo-Italic-webfont.svg#aleoitalic") format("svg");
  font-weight: normal;
  font-style: italic;
}
@font-face {
  font-family: 'Aleo';
  src: url("Aleo-Bold-webfont.eot");
  src: url("Aleo-Bold-webfont.eot?#iefix") format("embedded-opentype"), url("Aleo-Bold-webfont.woff") format("woff"), url("Aleo-Bold-webfont.ttf") format("truetype"), url("Aleo-Bold-webfont.svg#aleobold") format("svg");
  font-weight: bold;
  font-style: normal;
}
/* line 1, ../scss/base/_reset.scss */
html, body, div, span, applet, object, iframe, h1, h2, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  margin: 0;
  padding: 0;
}

/* line 9, ../scss/base/_reset.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

/* line 12, ../scss/base/_reset.scss */
body {
  line-height: 1;
}

/* line 15, ../scss/base/_reset.scss */
ol, ul {
  list-style: none;
}

/* line 18, ../scss/base/_reset.scss */
blockquote, q {
  quotes: none;
}

/* line 21, ../scss/base/_reset.scss */
blockquote:before, blockquote:after, q:before, q:after {
  content: none;
}

/* line 24, ../scss/base/_reset.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 28, ../scss/base/_reset.scss */
*:focus {
  outline: 0;
}

/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/* CSS Transition
	Usage: @include transition(width,0.3s,ease-out);
 */
/* Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback  
	Usage: @include font-size(1, large);
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
/* line 1, ../scss/atoms/_typography.scss */
html {
  font-size: 18px;
}

/* line 4, ../scss/atoms/_typography.scss */
body {
  font-family: "Lato", "Casper", "Helvetica", sans-serif;
  font-size: medium;
  font-size: 1rem;
  line-height: 1.45;
  color: #528CA5;
}

/* line 10, ../scss/atoms/_typography.scss */
h1, h2 {
  font-family: "Aleo", "sexay font", Times, serif;
  font-size: large;
  font-size: 2rem;
  color: #528CA5;
  line-height: 52px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* line 18, ../scss/atoms/_typography.scss */
h2 {
  color: #FF7040;
}

/* line 22, ../scss/atoms/_typography.scss */
h3 {
  font-weight: bold;
  line-height: 26px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* line 28, ../scss/atoms/_typography.scss */
h4 {
  font-style: italic;
  line-height: 26px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* line 34, ../scss/atoms/_typography.scss */
input[type="email"] {
  font-size: 24px;
  font-size: 1.33333rem;
  font-family: "Lato", "Casper", "Helvetica", sans-serif;
  color: #528CA5;
}

/* line 39, ../scss/atoms/_typography.scss */
input[type="submit"], .btn {
  font-weight: bold;
  font-size: medium;
  font-size: 1rem;
  font-family: "Lato", "Casper", "Helvetica", sans-serif;
  color: #fff;
  text-decoration: none;
}

/* line 46, ../scss/atoms/_typography.scss */
small {
  font-size: medium;
  font-size: 1rem;
  color: #528CA5;
  line-height: 26px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* line 53, ../scss/atoms/_typography.scss */
a {
  font-size: medium;
  font-size: 1rem;
  color: #528CA5;
  font-weight: bold;
  text-decoration: none;
  line-height: 26px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* line 62, ../scss/atoms/_typography.scss */
form {
  line-height: 52px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* line 1, ../scss/atoms/_form.scss */
form {
  border: 1px solid #E5D8CE;
  border-radius: 4px;
  *zoom: 1;
  width: auto;
  max-width: 465px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  padding: 20px;
}
/* line 344, ../scss/jeet/_grid.scss */
form:before, form:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
form:after {
  clear: both;
}

/* line 7, ../scss/atoms/_form.scss */
input {
  border: none;
}
/* line 9, ../scss/atoms/_form.scss */
input[type="email"] {
  padding-top: 8px;
  padding-bottom: 8px;
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 66.0%;
  margin-left: 0%;
  margin-right: 2%;
  text-align: left;
  padding-left: 0;
  padding-right: 0;
}
/* line 344, ../scss/jeet/_grid.scss */
input[type="email"]:before, input[type="email"]:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
input[type="email"]:after {
  clear: both;
}
/* line 58, ../scss/jeet/_grid.scss */
input[type="email"]:last-child {
  margin-right: 0%;
}
/* line 18, ../scss/atoms/_form.scss */
input[type="submit"] {
  padding-left: 0;
  padding-right: 0;
  -webkit-appearance: none;
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 0%;
  margin-right: 3%;
  background-color: #528CA5;
  padding-top: 12px;
  padding-bottom: 12px;
  border-radius: 4px;
}
/* line 344, ../scss/jeet/_grid.scss */
input[type="submit"]:before, input[type="submit"]:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
input[type="submit"]:after {
  clear: both;
}
/* line 58, ../scss/jeet/_grid.scss */
input[type="submit"]:last-child {
  margin-right: 0%;
}

/* line 1, ../scss/atoms/_button.scss */
.btn {
  background-color: #528CA5;
  padding: 12px;
  border-radius: 4px;
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 33.33333%;
  margin-left: 33.33333%;
  margin-right: 0%;
}
/* line 344, ../scss/jeet/_grid.scss */
.btn:before, .btn:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
.btn:after {
  clear: both;
}

/* line 1, ../scss/atoms/_social-link.scss */
ul.social-links > li {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 0%;
  margin-right: 3%;
  line-height: 26px;
  margin-top: 26px;
  margin-bottom: 26px;
}
/* line 344, ../scss/jeet/_grid.scss */
ul.social-links > li:before, ul.social-links > li:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
ul.social-links > li:after {
  clear: both;
}
/* line 58, ../scss/jeet/_grid.scss */
ul.social-links > li:last-child {
  margin-right: 0%;
}
/* line 3, ../scss/atoms/_social-link.scss */
ul.social-links > li a, ul.social-links > li img {
  max-width: 100%;
  max-height: 100%;
}
/* line 7, ../scss/atoms/_social-link.scss */
ul.social-links > li img {
  height: 20px;
}

/* line 1, ../scss/atoms/_hr.scss */
hr {
  border: solid 1px #E5D8CE;
}

/* line 1, ../scss/molecules/_header.scss */
.background {
  padding-top: 52px;
}

/* line 4, ../scss/molecules/_header.scss */
header {
  z-index: 1;
  background-color: #fff;
  position: relative;
  padding-top: 52px;
  box-shadow: 0px 20px 0 10px white, 0px 40px 0 20px white;
}
/* line 11, ../scss/molecules/_header.scss */
header h3 {
  margin-top: 13px;
  margin-bottom: 13px;
}
/* line 15, ../scss/molecules/_header.scss */
header h1, header h2 {
  margin-top: 13px;
  margin-bottom: 13px;
}
/* line 19, ../scss/molecules/_header.scss */
header img {
  width: 20%;
}

/* line 1, ../scss/molecules/_layout.scss */
.wrapper-main {
  z-index: 3;
  position: relative;
  *zoom: 1;
  width: auto;
  max-width: 960px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 1;
  padding-right: 1;
  text-align: center;
}
/* line 344, ../scss/jeet/_grid.scss */
.wrapper-main:before, .wrapper-main:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
.wrapper-main:after {
  clear: both;
}
/* line 7, ../scss/molecules/_layout.scss */
.wrapper-main ul.sponsors li, .wrapper-main ul.social-feed li {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 0%;
  margin-right: 3%;
}
/* line 344, ../scss/jeet/_grid.scss */
.wrapper-main ul.sponsors li:before, .wrapper-main ul.sponsors li:after, .wrapper-main ul.social-feed li:before, .wrapper-main ul.social-feed li:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
.wrapper-main ul.sponsors li:after, .wrapper-main ul.social-feed li:after {
  clear: both;
}
/* line 50, ../scss/jeet/_grid.scss */
.wrapper-main ul.sponsors li:nth-child(3n), .wrapper-main ul.social-feed li:nth-child(3n) {
  margin-right: 0%;
  float: right;
}
/* line 54, ../scss/jeet/_grid.scss */
.wrapper-main ul.sponsors li:nth-child(3n + 1), .wrapper-main ul.social-feed li:nth-child(3n + 1) {
  clear: both;
}
@media (min-width: 46.8em) {
  /* line 7, ../scss/molecules/_layout.scss */
  .wrapper-main ul.sponsors li, .wrapper-main ul.social-feed li {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 14.16667%;
    margin-left: 0%;
    margin-right: 3%;
  }
  /* line 344, ../scss/jeet/_grid.scss */
  .wrapper-main ul.sponsors li:before, .wrapper-main ul.sponsors li:after, .wrapper-main ul.social-feed li:before, .wrapper-main ul.social-feed li:after {
    content: '';
    display: table;
  }
  /* line 349, ../scss/jeet/_grid.scss */
  .wrapper-main ul.sponsors li:after, .wrapper-main ul.social-feed li:after {
    clear: both;
  }
  /* line 40, ../scss/jeet/_grid.scss */
  .wrapper-main ul.sponsors li:nth-child(3n), .wrapper-main ul.social-feed li:nth-child(3n) {
    margin-right: 3%;
    float: left;
  }
  /* line 44, ../scss/jeet/_grid.scss */
  .wrapper-main ul.sponsors li:nth-child(3n + 1), .wrapper-main ul.social-feed li:nth-child(3n + 1) {
    clear: none;
  }
  /* line 50, ../scss/jeet/_grid.scss */
  .wrapper-main ul.sponsors li:nth-child(6n), .wrapper-main ul.social-feed li:nth-child(6n) {
    margin-right: 0%;
    float: right;
  }
  /* line 54, ../scss/jeet/_grid.scss */
  .wrapper-main ul.sponsors li:nth-child(6n + 1), .wrapper-main ul.social-feed li:nth-child(6n + 1) {
    clear: both;
  }
}
/* line 12, ../scss/molecules/_layout.scss */
.wrapper-main ul.sponsors li img, .wrapper-main ul.social-feed li img {
  max-width: 100%;
}
/* line 17, ../scss/molecules/_layout.scss */
.wrapper-main ul.social-links {
  *zoom: 1;
  width: auto;
  max-width: 320px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
}
/* line 344, ../scss/jeet/_grid.scss */
.wrapper-main ul.social-links:before, .wrapper-main ul.social-links:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
.wrapper-main ul.social-links:after {
  clear: both;
}
/* line 20, ../scss/molecules/_layout.scss */
.wrapper-main h2.social {
  margin-bottom: 0;
}

/* line 24, ../scss/molecules/_layout.scss */
header {
  *zoom: 1;
  width: auto;
  max-width: 620px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 2;
  padding-right: 2;
  text-align: center;
}
/* line 344, ../scss/jeet/_grid.scss */
header:before, header:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
header:after {
  clear: both;
}
/* line 27, ../scss/molecules/_layout.scss */
header div {
  *zoom: 1;
  width: auto;
  max-width: 465px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
}
/* line 344, ../scss/jeet/_grid.scss */
header div:before, header div:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
header div:after {
  clear: both;
}

/* line 31, ../scss/molecules/_layout.scss */
footer {
  padding-top: 52px;
  padding-bottom: 52px;
  *zoom: 1;
  width: auto;
  max-width: 960px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
}
/* line 344, ../scss/jeet/_grid.scss */
footer:before, footer:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
footer:after {
  clear: both;
}
/* line 35, ../scss/molecules/_layout.scss */
footer .left {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 48.5%;
  margin-left: 0%;
  margin-right: 3%;
}
/* line 344, ../scss/jeet/_grid.scss */
footer .left:before, footer .left:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
footer .left:after {
  clear: both;
}
/* line 58, ../scss/jeet/_grid.scss */
footer .left:last-child {
  margin-right: 0%;
}
/* line 38, ../scss/molecules/_layout.scss */
footer .right {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 48.5%;
  margin-left: 0%;
  margin-right: 3%;
}
/* line 344, ../scss/jeet/_grid.scss */
footer .right:before, footer .right:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
footer .right:after {
  clear: both;
}
/* line 58, ../scss/jeet/_grid.scss */
footer .right:last-child {
  margin-right: 0%;
}
/* line 40, ../scss/molecules/_layout.scss */
footer .right li {
  float: right;
  display: inline;
  padding-left: .375rem;
  padding-right: .375rem;
}

/* line 2, ../scss/molecules/_text.scss */
.wrapper-main div {
  *zoom: 1;
}
/* line 344, ../scss/jeet/_grid.scss */
.wrapper-main div:before, .wrapper-main div:after {
  content: '';
  display: table;
}
/* line 349, ../scss/jeet/_grid.scss */
.wrapper-main div:after {
  clear: both;
}
@media (min-width: 46.8em) {
  /* line 5, ../scss/molecules/_text.scss */
  .wrapper-main p {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 48.5%;
    margin-left: 25.75%;
    margin-right: 3%;
  }
  /* line 344, ../scss/jeet/_grid.scss */
  .wrapper-main p:before, .wrapper-main p:after {
    content: '';
    display: table;
  }
  /* line 349, ../scss/jeet/_grid.scss */
  .wrapper-main p:after {
    clear: both;
  }
  /* line 58, ../scss/jeet/_grid.scss */
  .wrapper-main p:last-child {
    margin-right: 0%;
  }
}

/* line 2, ../scss/molecules/_background-day.scss */
.background {
  background-color: #CBF2FF;
}
/* line 4, ../scss/molecules/_background-day.scss */
.background .cloud-1 {
  top: 100px;
  -webkit-animation: cloud-1 80s;
  animation: cloud-1 80s;
}
/* line 9, ../scss/molecules/_background-day.scss */
.background .cloud-2 {
  top: 300px;
  -webkit-animation: cloud-2 80s;
  animation: cloud-2 80s;
}
/* line 14, ../scss/molecules/_background-day.scss */
.background .cloud-1, .background .cloud-2 {
  position: absolute;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
}

@-webkit-keyframes cloud-1 {
  from {
    left: -150px;
  }
  to {
    left: 100%;
  }
}
@keyframes cloud-1 {
  from {
    left: -150px;
  }
  to {
    left: 100%;
  }
}
@-webkit-keyframes cloud-2 {
  from {
    right: -110px;
  }
  to {
    right: 100%;
  }
}
@keyframes cloud-2 {
  from {
    right: -110px;
  }
  to {
    right: 100%;
  }
}
/* line 38, ../scss/molecules/_background-day.scss */
body {
  overflow-x: hidden;
}
